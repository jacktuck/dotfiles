-- local null_ls = require("null-ls")
-- local lsp_formatting = function(bufnr)
--   vim.lsp.buf.format({
--     filter = function(client)
--       -- apply whatever logic you want (in this example, we'll only use null-ls)
--       return client.name == "null-ls"
--     end,
--     bufnr = bufnr,
--   })
-- end
--
-- -- if you want to set up formatting on save, you can use this as a callback
-- local augroup = vim.api.nvim_create_augroup("LspFormatting", {})
--
-- -- add to your shared on_attach callback
-- local on_attach = function(client, bufnr)
--   if client.supports_method("textDocument/formatting") then
--     vim.api.nvim_clear_autocmds({ group = augroup, buffer = bufnr })
--     vim.api.nvim_create_autocmd("BufWritePre", {
--       group = augroup,
--       buffer = bufnr,
--       callback = function()
--         lsp_formatting(bufnr)
--       end,
--     })
--   end
-- end
--
-- null_ls.setup({
--   sources = {
--     null_ls.builtins.formatting.stylua,
--     require("none-ls.diagnostics.eslint_d").with({
--       parefer_local = "node_modules/.bin",
--       diagnostics_format = "[#{c}] #{m} (#{s})",
--     }),
--     null_ls.builtins.formatting.prettier.with({
--       prefer_local = "node_modules/.bin",
--       diagnostics_format = "[#{c}] #{m} (#{s})",
--       condition = function()
--         -- do not format yaml
--         return vim.bo.filetype ~= "yaml"
--       end,
--     }),
--   },
--
--   on_attach = on_attach,
--   debug = false,
-- })
